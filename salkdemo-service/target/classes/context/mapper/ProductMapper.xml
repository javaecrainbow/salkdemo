<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.salk.salkdemo.product.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.salk.salkdemo.domain.Product" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="VERSION" property="version" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="db_Type" property="dbType" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
    <result column="weights" property="weights" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="adder_name" property="adderName" jdbcType="VARCHAR" />
    <result column="lang_type" property="langType" jdbcType="VARCHAR" />
    <result column="post_time" property="postTime" jdbcType="TIMESTAMP" />
    <result column="sale_num" property="saleNum" jdbcType="INTEGER" />
    <result column="source_type" property="sourceType" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="updater_name" property="updaterName" jdbcType="VARCHAR" />
    <result column="view_num" property="viewNum" jdbcType="INTEGER" />
    <result column="recommend" property="recommend" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.salk.salkdemo.domain.Product" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="indexProductResultMap" type="com.salk.salkdemo.domain.Product" >
  	<result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/> 
     <result column="ID" property="id" jdbcType="BIGINT"/> 
     <result column="lang_type" property="langType" jdbcType="VARCHAR"/> 
  </resultMap>
  <resultMap id="recommendResultMap" type="com.salk.salkdemo.domain.Product" >
  	<result column="name" property="name" jdbcType="VARCHAR"/>
  	<result column="ID" property="id" jdbcType="BIGINT"/> 
  </resultMap>
  <resultMap  id="detailResultMap" type="com.salk.salkdemo.domain.Product">
  	<result column="name" property="name" jdbcType="VARCHAR"/>
  	<result column="ID" property="id" jdbcType="BIGINT"/> 
  <result column="db_type" property="dbType" jdbcType="VARCHAR" />
    <result column="summary" property="summary" jdbcType="VARCHAR" />
   <result column="lang_type" property="langType" jdbcType="VARCHAR" />
   <result column="sale_num" property="saleNum" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="view_num" property="viewNum" jdbcType="INTEGER" />
   
  </resultMap>
	<select id="queryIndexProducts" parameterType="java.lang.Integer" resultMap="indexProductResultMap"> 
		<![CDATA[
		SELECT A.name,A.update_time,A.ID,A.lang_type FROM GOODS A WHERE #{perNum} > 
		(SELECT COUNT(*) FROM GOODS WHERE LANG_TYPE = A.LANG_TYPE AND WEIGHTS < A.WEIGHTS ) ORDER BY A.LANG_TYPE,A.WEIGHTS
		]]>
		</select>
		<select id="queryRecommendProducts" parameterType="java.lang.Integer" resultMap="indexProductResultMap"> 
		<![CDATA[
		SELECT A.name,A.update_time,A.ID,A.lang_type FROM GOODS A WHERE A.recommend='1' order by post_time desc limit 0,#{num}
		]]>
		</select>
		
	<select id="findProductById" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
		SELECT A.id,A.name,A.summary,A.description,A.lang_type,A.post_time,A.weights,A.source_type,A.view_num FROM GOODS A WHERE id =#{productId}
	</select>
	<select id="getAllProductByCategory" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
			SELECT A.id,A.name,A.summary,A.description,A.lang_type,A.post_time,A.source_type FROM GOODS A WHERE LOWER(A.lang_type) =#{categoryType}
	</select>
	<select id="getProductNumByCategory" parameterType="java.lang.String"  resultType="java.lang.Integer">
				SELECT count(1) FROM GOODS A WHERE LOWER(A.lang_type) =#{categoryType}
	</select>
	
	<select id="getQueryNumByCategory" parameterType="map"  resultType="java.lang.Integer">
				SELECT count(1) FROM GOODS A WHERE 
				<if test="categoryType!=null">
				LOWER(A.lang_type) =#{categoryType} and
				</if>
				<foreach collection="spliderNames" item="item" open="("  separator="OR">
		A.NAME like '%${item}%'
		</foreach>
		<foreach collection="spliderNames" item="item" open="OR"  separator="OR">
		A.SUMMARY like '%${item}%'
		</foreach>
		<foreach collection="spliderNames" item="item" open="OR" separator="OR" close=")">
		A.DESCRIPTION like '%${item}%'
		</foreach>
	</select>
	<select id="getAllProductByCategoryPage"  parameterType ="map" resultMap="ResultMapWithBLOBs">
		SELECT A.id,A.name,A.summary,A.description,A.lang_type,A.post_time,A.source_type FROM GOODS A WHERE LOWER(A.lang_type) =#{categoryType,jdbcType=VARCHAR} 
		order by post_time desc limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
	</select>
	<select id="getAllQuerysByCategoryPage"  parameterType ="map" resultMap="ResultMapWithBLOBs">
		SELECT A.id,A.name,A.summary,A.description,A.lang_type,A.post_time,A.source_type FROM GOODS A WHERE 
		<if test="categoryType!=null">
				LOWER(A.lang_type) =#{categoryType} and
				</if>
				<foreach collection="spliderNames" item="item" open="("  separator="OR">
		A.NAME like '%${item}%'
		</foreach>
		<foreach collection="spliderNames" item="item" open="OR"  separator="OR">
		A.SUMMARY like '%${item}%'
		</foreach>
		<foreach collection="spliderNames" item="item" open="OR" separator="OR" close=")">
		A.DESCRIPTION like '%${item}%'
		</foreach>
		order by post_time desc limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
	</select>
	<select id="getLastedProductsByCategory" parameterType ="map" resultMap="BaseResultMap">
		SELECT A.id,A.name,A.lang_type,A.post_time,A.source_type FROM GOODS A WHERE LOWER(A.lang_type) =#{categoryType} order by A.update_time desc limit 0, #{perNum}
	</select>
<select id="getHotProductsByCategory" parameterType ="java.lang.Integer" resultMap="BaseResultMap">
		SELECT A.id,A.name,A.lang_type,A.post_time,A.source_type FROM GOODS A order by A.sale_num desc limit 0, #{perNum}
	</select>
	<select id="getRelatedProducts" parameterType="list" resultMap="BaseResultMap">
		SELECT A.id,A.name,A.lang_type,A.post_time,A.source_type FROM GOODS A WHERE
		<foreach collection="list" item="item" >
		A.NAME like '%${item}%' OR
		</foreach>
		<foreach collection="list" item="item" >
		A.SUMMARY like '%${item}%' OR
		</foreach>
		<foreach collection="list" item="item">
		A.DESCRIPTION like '%${item}%' OR
		</foreach>
		1!=1 limit 0,9
	</select>
</mapper>